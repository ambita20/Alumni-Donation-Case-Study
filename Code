library(car)
library(tidyverse)
library(GGally)
library(MASS)
library(dvmisc)
library(leaps)

url <- "https://bgreenwell.github.io/uc-bana7052/data/alumni.csv"
alumni <- read.csv(url, stringsAsFactors = F)
glimpse(alumni)
glimpse(alumni)

summary(alumni$percent_of_classes_under_20)
summary(alumni$student_faculty_ratio)
summary(alumni$alumni_giving_rate)
table(alumni$private)

par(mfrow = c(1,3))
boxplot(alumni$percent_of_classes_under_20,main = 'Boxplot for % Classes_Under_20')
boxplot(alumni$student_faculty_ratio, main = 'Boxplot for Student Faculty Ratio')
boxplot(alumni$alumni_giving_rate,main = 'Boxplot for Alumni Giving Rate')

GGally::ggpairs(
  data = alumni[, c(2:5)]
)

par(mfrow = c(1,2))
alumni$private <- as.factor(alumni$private)
ggplot(alumni, aes(x = student_faculty_ratio, y = alumni_giving_rate, group = private)) +
  geom_point(aes(colour = private), size = 3) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
              color = "black") +
  theme_light()

ggplot(alumni, aes(x = percent_of_classes_under_20, y = alumni_giving_rate, group = private)) +
  geom_point(aes(colour = private), size = 3) +
  geom_smooth(method = "lm", formula = y ~ x, se = FALSE,
              color = "black") +
  theme_light()
  
  alumni_copy <- subset(alumni, select = -Ã¯..school)
fit_min <- lm(alumni_giving_rate ~ 1, data = alumni_copy)
#summary(fit_min)
fit_max <- lm(alumni_giving_rate ~ .^3, data = alumni_copy)
#summary(fit_max)
fit_be <- step(fit_max, direction = "backward", 
             trace = 0, k = log(nrow(alumni_copy)))
fit_fs <- step(fit_min, direction = "forward", 
             scope = list(lower = fit_min,
                          upper = fit_max),
             trace = 0, k = log(nrow(alumni_copy)))
fit_step <- step(fit_fs, direction = "both", 
             scope = list(lower = fit_min,
                          upper = fit_max),
             trace = 0, k = log(nrow(alumni_copy)))
             
 PRESS <- function(object, ...) {
  if(!missing(...)) {
    res <- sapply(list(object, ...), FUN = function(x) {
      sum(rstandard(x, type = "predictive") ^ 2)
    })
    names(res) <- as.character(match.call()[-1L])
    res
  } else {
    sum(rstandard(object, type = "predictive") ^ 2)
  }
}

modelMetrics <- function(object, ...) {
  if(!missing(...)) {
    res <- sapply(list(object, ...), FUN = function(x) {
      c("AIC" = AIC(x), "BIC" = BIC(x), 
        "adjR2" = summary(x)$adj.r.squared,
        "RMSE"  = sigma(x), "PRESS" = PRESS(x), 
        "nterms" = length(coef(x)))
    })
    colnames(res) <- as.character(match.call()[-1L])
    res
  } else {
    c("AIC" = AIC(object), "BIC" = BIC(object), 
      "adjR2" = summary(object)$adj.r.squared, 
      "RMSE"  = sigma(object), "PRESS" = PRESS(object),
      "nterms" = length(coef(object)))
  }
}


model_check <- modelMetrics(fit_be, fit_fs, fit_step)
round(model_check,3)
summary(fit_step)
(RMSE <- sqrt(get_mse(fit_be)))

par(mfrow = c(1,3))
alumni_model_stats <- alumni %>%
  lm(alumni_giving_rate ~ student_faculty_ratio, data = .) %>%
  broom::augment() %>%
  mutate(row_num = 1:n())

# Fitted vs Residuals
ggplot(alumni_model_stats, aes(x = .fitted, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  geom_hline(yintercept = c(-2, 2), linetype = "dotted") +
  # geom_smooth(color = "forestgreen", alpha = 0.1, se = FALSE) +
  xlab("Fitted value") +
  ylab("Studentized residual") +
  theme_light()

# Normality check for residuals
ggplot(alumni_model_stats, aes(sample = .std.resid)) +
  geom_qq(alpha = 0.3) +
  geom_qq_line(linetype = "dashed", color = "red2") +
  xlab("Theoretical quantile") +
  ylab("Sample quantile") +
  theme_light()

# serial correlation check for residuals
ggplot(alumni_model_stats, aes(x = row_num, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_line() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  xlab("Index") +
  ylab("Stundentized residual") +
  theme_light()

# Predictor vs Residuals
ggplot(alumni_model_stats, aes(x = student_faculty_ratio, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  geom_hline(yintercept = c(-2, 2), linetype = "dotted") +
  geom_smooth(color = "forestgreen", alpha = 0.1, se = FALSE) +
  ylab("Stundentized residual") +
  theme_light()

# hat values vs Residuals
ggplot(alumni_model_stats, aes(x = .hat, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  geom_hline(yintercept = c(-2, 2), linetype = "dotted") +
  geom_smooth(color = "forestgreen", alpha = 0.1, se = FALSE) +
  ylab("Studentized residual") +
  theme_light()

```

We do not see any mean structure present, but we see there might be a problem with non-constant variance. It is a skew right data , might be probelmatic given we have only 48 observations. We see that serial correlation is not a problem here, as the gap between the points is quite random and does not show a pattern. This seems to be a random scatter as we are do not see any shape here except for the line trying to follow the scatter. We do see an outlier which is changing the direction of the fitted line - this point is an influential point.

### Transformation (Box - Cox Procedure)

As we see a problem of non - constant variance as well as a problem with non - normality, we will apply box - cox trasformation to check if we can fix this.

```{r Transformation, echo=FALSE}
bc <- MASS::boxcox(alumni_giving_rate ~ student_faculty_ratio, data = alumni)
(lambda <- bc$x[which.max(bc$y)])
alumni$alumni_giving_rate2 <- ((alumni$alumni_giving_rate ^ lambda) - 1) / lambda

alumni_model_stats_transformed1 <- alumni %>%
  lm(alumni_giving_rate2 ~ student_faculty_ratio, data = .) %>%
  broom::augment() %>%
  mutate(row_num = 1:n())

Transformed_model_fit <- lm(alumni_giving_rate2 ~ student_faculty_ratio, data = alumni)
summary(Transformed_model_fit)
(RMSE <- sqrt(get_mse(Transformed_model_fit)))

```

The lambda value for transformation is 0.42424. We see that the model variance being explained increased by ~4%. We also managed to decrease the RMSE by ~85% from 9.1 to 1.3

### Residual Diagnostics

Let us look at the model diagnostics again - 

```{r, echo=FALSE}
# Fitted vs Residuals
ggplot(alumni_model_stats_transformed1, aes(x = .fitted, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  geom_hline(yintercept = c(-2, 2), linetype = "dotted") +
  # geom_smooth(color = "forestgreen", alpha = 0.1, se = FALSE) +
  xlab("Fitted value") +
  ylab("Studentized residual") +
  theme_light()


# Normality check for residuals
ggplot(alumni_model_stats_transformed1, aes(sample = .std.resid)) +
  geom_qq(alpha = 0.3) +
  geom_qq_line(linetype = "dashed", color = "red2") +
  xlab("Theoretical quantile") +
  ylab("Sample quantile") +
  theme_light()

# serial correlation check for residuals
ggplot(alumni_model_stats_transformed1, aes(x = row_num, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_line() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  xlab("Index") +
  ylab("Stundentized residual") +
  theme_light()


# Predictor vs Residuals
ggplot(alumni_model_stats_transformed1, aes(x = student_faculty_ratio, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  geom_hline(yintercept = c(-2, 2), linetype = "dotted") +
  geom_smooth(color = "forestgreen", alpha = 0.1, se = FALSE) +
  ylab("Stundentized residual") +
  theme_light()


# hat values vs Residuals
ggplot(alumni_model_stats_transformed1, aes(x = .hat, y = .std.resid)) +
  geom_point(alpha = 0.3) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red2") +
  geom_hline(yintercept = c(-2, 2), linetype = "dotted") +
  geom_smooth(color = "forestgreen", alpha = 0.1, se = FALSE) +
  ylab("Studentized residual") +
  theme_light()

             
